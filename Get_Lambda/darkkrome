#! /bin/bash

set -e

die() { echo "$*" 1>&2 ; exit 1; }

help() {
    echo "DARKKROME: Script to quickly show off darkkrome.py -test=dark option"
    echo "           Essentially a wrapper for the following commands:"
    echo "              ./darkkrome.py -test=dark"
    echo "              cd build"
    echo "              make clean && make"
    echo "              ./test"
    echo "              cd .."
    echo
    echo "Usage: darkkrome [-k] [-t] [-d] [-D] [-R] [-r] [-C] [--epsilon EPS] [--zred Z] [--test TEST] [--batch-dir BATCH_DIRECTORY] [--help]"
    echo "       -k             Skip running KROME"
    echo "       -m             Skip compiling"
    echo "       -t             Skip running test program"
    echo "       -d             Run make debug instead of make"
    echo "       -D             Run the test program with dynamic density off"
    echo "       -r             Skip running KROME and make"
    echo "       -R             Run the bare test program"
    echo "       -C             Assume the call to KROME completes successfully"
    echo "       -b             Run the test program in batch mode"
    echo "       --epsilon EPS  Run the test program with the specified epsilon"
    echo "       --zred Z       Run the test program with the specified redshift"
    echo "       --temp TEMP    Run the test program with the specified temperature"
    echo "       --ntot NTOT    Run the test program with the specified density"
    echo "       --batch-dir BATCH_DIRECTORY    Save output of test program to BATCH_DIRECTORY, default: ./data "
    echo "       --test TEST    Run krome -test=TEST instead of krome -test=dark"
    echo "       --help         Display this message and exit"
    exit 0
}

RUNKROME=1
RUNTEST=1
DEBUG=0
MAKE=1
BATCH=0
BATCHDIR=data
TEST=dark
COMPLETE=0
TEMP=10000
NTOT=1
DYNDEN=1
ZRED=20
EPSILON=1

while :; do
    case $1 in
        -k)
            echo "Not running KROME"
            RUNKROME=0
            ;;
        -m)
            echo "Skipping compilation"
            MAKE=0
            ;;
        -t)
            echo "Not running test program"
            RUNTEST=0
            ;;
        -d)
            echo "Debugging"
            DEBUG=1
            ;;
        -D)
        	echo "Dynamic Density off"
        	DYNDEN=0
        	;;
        -r)
            echo "Skipping darkkrome and make"
            RUNKROME=0
            MAKE=0
            ;;
        -b)
            echo "Running in batch mode"
            BATCH=1
            ;;
        -C)
            echo "Assuming KROME completes successfully"
            COMPLETE=1
            ;;
        -R)
            cd build
            ./test
            cd ..
            exit 0
            ;;
        --batch-dir)
            if [[ "$2" ]]; then
                BATCHDIR="$2"
                BATCH=1
                shift
            else
                die 'ERROR: "--batch-dir" requires a non-empty argument'
            fi
            ;;
        --epsilon)
            if [[ "$2" ]]; then
                EPSILON="$2"
                shift
            else
                die 'ERROR: "--epsilon" requires non-empty argument'
            fi	
	    echo "Running at epsilon=$EPSILON"
	    ;;
        --zred)
            if [[ "$2" ]]; then
                ZRED="$2"
                shift
            else
                die 'ERROR: "--zred" requires non-empty argument'
            fi	
	    echo "Running at zred=$ZRED"
            ;;
        --temp)
            if [[ "$2" ]]; then
                TEMP="$2"
                shift
            else
                die 'ERROR: "--temp" requires non-empty argument'
            fi	
	    echo "Running at Tvir=$TEMP"
	    ;;
        --ntot)
            if [[ "$2" ]]; then
                NTOT="$2"
                shift
            else
                die 'ERROR: "--ntot" requires non-empty argument'
            fi	
	    echo "Running at ntot=$NTOT"
	    ;;
        --test)
            if [[ "$2" ]]; then
                TEST="$2"
                shift
            else
                die 'ERROR: "--test" requires non-empty argument'
            fi
            ;;
        --help)
            help
            ;;
        -?*)
            printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
            ;;
        *)
            break
    esac
    shift
done


if [[ $RUNKROME -gt 0 ]]; then
    ./darkkrome.py -test=$TEST
    
    if [[ $COMPLETE -lt 1 ]]; then
    	read -p "Did KROME complete successfully [n]? " -n 1 -r
    	echo
    	if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        	exit 1
    	fi
    fi
fi

cd build
if [[ $MAKE -gt 0 ]]; then
make clean
fi

if [[ $DEBUG -gt 0 ]]; then
    make debug
    ddd ./test
else
    if [[ $MAKE -gt 0 ]]; then
    if [[ "$TEST" == "dark" ]]; then
        make
    else
        make gfortran
    fi
    fi

    if [[ $RUNTEST -gt 0 ]]; then
        if [[ $BATCH -lt 1 ]]; then
            ./test $TEMP $DYNDEN $ZRED $EPSILON
        else
            mkdir -p $BATCHDIR
	     for i in 300 1000 3000 8000 10000 15000 20000; do
                echo $i
                ./test $i $NTOT $ZRED $EPSILON
            	FILENAME=$(printf "t%i_z%i_e%1.3f" $i $ZRED $EPSILON)
                mv run_$FILENAME.dat $BATCHDIR/batch_$FILENAME.dat
                mv run_$FILENAME.cool $BATCHDIR/batch_$FILENAME.cool
                mv run_$FILENAME.heat $BATCHDIR/batch_$FILENAME.heat
                mv run_$FILENAME.react $BATCHDIR/batch_$FILENAME.react
            done
            echo "Saving batch results to $BATCHDIR"
            echo "Plotting commands will need to be adjusted accordingly."
            echo "For example, datafile=$BATCHDIR/batch_$FILENAME.dat"
        fi
    fi
fi

cd ..
